version: '3.8'

networks:
  patroni-net:

volumes:
  etcd1-data:
  etcd2-data:
  etcd3-data:
  patroni1-data:
  patroni2-data:
  patroni3-data:

services:
  # ========== ETCD cluster ==========
  etcd1:
    image: quay.io/coreos/etcd:v3.5.15
    container_name: etcd1
    command: >
      /usr/local/bin/etcd
      --name etcd1
      --data-dir /etcd-data
      --listen-client-urls http://0.0.0.0:2379
      --advertise-client-urls http://etcd1:2379
      --listen-peer-urls http://0.0.0.0:2380
      --initial-advertise-peer-urls http://etcd1:2380
      --initial-cluster etcd1=http://etcd1:2380,etcd2=http://etcd2:2380,etcd3=http://etcd3:2380
      --initial-cluster-token etcd-cluster-1
      --initial-cluster-state new
      --enable-v2
    healthcheck:
      test: ["CMD", "etcdctl", "--endpoints=http://127.0.0.1:2379", "endpoint", "health"]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 30s
    environment:
      - ETCDCTL_API=3
    networks:
      - patroni-net
    volumes:
      - etcd1-data:/etcd-data

  etcd2:
    image: quay.io/coreos/etcd:v3.5.15
    container_name: etcd2
    command: >
      /usr/local/bin/etcd
      --name etcd2
      --data-dir /etcd-data
      --listen-client-urls http://0.0.0.0:2379
      --advertise-client-urls http://etcd2:2379
      --listen-peer-urls http://0.0.0.0:2380
      --initial-advertise-peer-urls http://etcd2:2380
      --initial-cluster etcd1=http://etcd1:2380,etcd2=http://etcd2:2380,etcd3=http://etcd3:2380
      --initial-cluster-token etcd-cluster-1
      --initial-cluster-state new
      --enable-v2
    healthcheck:
      test: ["CMD", "etcdctl", "--endpoints=http://127.0.0.1:2379", "endpoint", "health"]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 30s
    environment:
      - ETCDCTL_API=3
    networks:
      - patroni-net
    volumes:
      - etcd2-data:/etcd-data

  etcd3:
    image: quay.io/coreos/etcd:v3.5.15
    container_name: etcd3
    command: >
      /usr/local/bin/etcd
      --name etcd3
      --data-dir /etcd-data
      --listen-client-urls http://0.0.0.0:2379
      --advertise-client-urls http://etcd3:2379
      --listen-peer-urls http://0.0.0.0:2380
      --initial-advertise-peer-urls http://etcd3:2380
      --initial-cluster etcd1=http://etcd1:2380,etcd2=http://etcd2:2380,etcd3=http://etcd3:2380
      --initial-cluster-token etcd-cluster-1
      --initial-cluster-state new
      --enable-v2
    healthcheck:
      test: ["CMD", "etcdctl", "--endpoints=http://127.0.0.1:2379", "endpoint", "health"]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 30s
    environment:
      - ETCDCTL_API=3
    networks:
      - patroni-net
    volumes:
      - etcd3-data:/etcd-data

  # ========== Patroni cluster ==========
  patroni1:
    image: ghcr.io/zalando/spilo-15:3.1-p1
    container_name: patroni1
    user: postgres
    volumes:
      - ./configs/patroni1.yml:/etc/patroni.yml
      - patroni1-data:/var/lib/postgresql
    command: ["patroni", "/etc/patroni.yml"]
    networks:
      - patroni-net
    ports:
      - "5433:5432"
    depends_on:
      etcd1:
        condition: service_healthy
      etcd2:
        condition: service_healthy
      etcd3:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8008/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 60s

  patroni2:
    image: ghcr.io/zalando/spilo-15:3.1-p1
    container_name: patroni2
    user: postgres
    volumes:
      - ./configs/patroni2.yml:/etc/patroni.yml
      - patroni2-data:/var/lib/postgresql
    command: ["patroni", "/etc/patroni.yml"]
    networks:
      - patroni-net
    ports:
      - "5434:5432"
    depends_on:
      etcd1:
        condition: service_healthy
      etcd2:
        condition: service_healthy
      etcd3:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8008/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 60s

  patroni3:
    image: ghcr.io/zalando/spilo-15:3.1-p1
    container_name: patroni3
    user: postgres
    volumes:
      - ./configs/patroni3.yml:/etc/patroni.yml
      - patroni3-data:/var/lib/postgresql
    command: ["patroni", "/etc/patroni.yml"]
    networks:
      - patroni-net
    ports:
      - "5435:5432"
    depends_on:
      etcd1:
        condition: service_healthy
      etcd2:
        condition: service_healthy
      etcd3:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8008/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 60s

  # ========== HAProxy ==========
  haproxy:
    image: haproxy:2.9
    container_name: haproxy
    ports:
      - "5000:5000"   # write (master)
      - "5001:5001"   # read (replica)
    volumes:
      - ./ha-config/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    networks:
      - patroni-net
    depends_on:
      - patroni1
      - patroni2
      - patroni3
